map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

upstream petal_web {
  server 127.0.0.1:4000 max_fails=5 fail_timeout=60s;
}

server {
    if ($host = myapp.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


  listen 80 default_server;
  listen [::]:80 default_server;

  server_name myapp.com;
    return 404; # managed by Certbot
}

server {
  listen [::]:443 ssl http2 default_server ipv6only=on; # managed by Certbot
  listen 443 http2 ssl default_server; # managed by Certbot

  ssl_certificate /etc/letsencrypt/live/myapp.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/myapp.com/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

  server_name myapp.com;

  root /home/petal/public;

  access_log /var/log/nginx/petal-web-access.log combined;
  error_log  /var/log/nginx/petal-web-error.log;

  index index.html;

  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;

  location / {
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP       $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host            $http_host;
    proxy_set_header Upgrade         $http_upgrade;
    proxy_set_header Connection      $connection_upgrade;
    proxy_http_version               1.1;

    proxy_redirect off;
    proxy_pass http://petal_web;
  }
}
